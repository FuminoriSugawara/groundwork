// ================================
//    layout helpers: mixins 
// ================================

@mixin _clear {
  clear: both;
  &:after {content:''; display:block; clear:both;}
}
@mixin _clearfix {@include _clear;}

@mixin _padded($multiple: 1)      { padding: $gutter * $multiple; }
@mixin _pad-top($multiple: 1)     { padding-top: $gutter * $multiple; }
@mixin _pad-right($multiple: 1)   { padding-right: $gutter * $multiple; }
@mixin _pad-bottom($multiple: 1)  { padding-bottom: $gutter * $multiple; }
@mixin _pad-left($multiple: 1)    { padding-left: $gutter * $multiple; }

@mixin _gapped($multiple: 1)      { margin: $gutter * $multiple; }
@mixin _gap-top($multiple: 1)     { margin-top: $gutter * $multiple; }
@mixin _gap-right($multiple: 1)   { margin-right: $gutter * $multiple; }
@mixin _gap-bottom($multiple: 1)  { margin-bottom: $gutter * $multiple; }
@mixin _gap-left($multiple: 1)    { margin-left: $gutter * $multiple; }

@mixin _inline                    { display:inline-block; width:auto; }
@mixin _block                     { display:block; }

@mixin _zero                      { margin:0; padding:0; }

@mixin _pull-right                { float:right; }
@mixin _pull-left                 { float:left; }

// ================================
//    layout helpers: placeholders
// ================================

%clear, %clearfix { @include _clear;}

%padded           { @include _padded;
  &%double        { @include _padded(2); }
  &%triple        { @include _padded(3); }
}
%pad-top          { @include _pad-top;
  &%double        { @include _pad-top(2); }
  &%triple        { @include _pad-top(3); }
}
%pad-right        { @include _pad-right;
  &%double        { @include _pad-right(2); }
  &%triple        { @include _pad-right(3); }
}
%pad-bottom       { @include _pad-bottom;
  &%double        { @include _pad-bottom(2); }
  &%triple        { @include _pad-bottom(3); }
}
%pad-left         { @include _pad-left;
  &%double        { @include _pad-left(2); }
  &%triple        { @include _pad-left(3); }
}

%gapped           { @include _gapped;
  &%double        { @include _gapped(2); }
  &%triple        { @include _gapped(3); }
}
%gap-top          { @include _gap-top;
  &%double        { @include _gap-top(2); }
  &%triple        { @include _gap-top(3); }
}                   
%gap-right        { @include _gap-right;
  &%double        { @include _gap-right(2); }
  &%triple        { @include _gap-right(3); }
}                   
%gap-bottom       { @include _gap-bottom;
  &%double        { @include _gap-bottom(2); }
  &%triple        { @include _gap-bottom(3); }
}                   
%gap-left         { @include _gap-left;
  &%double        { @include _gap-left(2); }
  &%triple        { @include _gap-left(3); }
}

%inline           { @include _inline; }
%block            { @include _block; }

%zero             { @include _zero; }

%pull-right       { @include _pull-right; }
%pull-left        { @include _pull-left; }

// ================================
//    layout helpers: classes
// ================================

@if $classes {

  $helpers: inline block zero pull-right pull-left;

  // function to generate the helpers
  @for $i from 1 through length($helpers) {
    .#{nth($helpers, $i)} { @extend %#{nth($helpers, $i)}; }
  }

  $spacers: padded pad-top pad-right pad-bottom pad-left gapped gap-top gap-right gap-bottom gap-left;
  $modifiers: double triple;
  // function to generate the spacers
  @for $i from 1 through length($spacers) {
    .#{nth($spacers, $i)} {
      @extend %#{nth($spacers, $i)};
      @for $i from 1 through length($modifiers) {
        &.#{nth($modifiers, $i)} { @extend %#{nth($modifiers, $i)}; }
      }
    }
  }

  .clear, .clearfix { @extend %clear;
    &:after         { content:''; display:block; clear:both; }
  }

}
